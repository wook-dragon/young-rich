팩토리 메소드 패턴 : 객체를 생성하기 위한 인터페이스를 정의하는데, 어떤 클래스의 인스턴스를

                                 만들지는 서브클래스에서 결정하게 만든다. 즉 팩토리 메소드 패턴을 이용하면

                                 클래스의 인스턴스를 만드는 일을 서브클래스에게 맡기는 것.


- 생성 할 클래스를 미리 알지 못해도 팩토리 클래스가 생성 담당
- 객체의 자료형이 하휘클래스에 의해서 결정 -> 확장 용이성
- 동일한 형태로 프로그래밍 가능
- 확장석이 있는 전체 프로젝트 구성가능
- 객체가 늘어날 때 마다 하위클래스 재정의로 인한 불필요한 많은 클래스 생성가능성

추상 팩토리 패턴 : 인터페이스를 이용하여 서로 연관된, 또는 의존하는 객체를 구상 클래스를 지정하지 않고도 생성.



